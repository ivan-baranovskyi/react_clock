{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","intervalId","state","time","getCurrentTime","Date","toUTCString","slice","this","setState","window","setInterval","console","info","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","startTimer","stopTimer","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,WAA4B,KAD9B,EAGEC,MAAoB,CAClBC,KAAM,IAJV,EA6BEC,eAAiB,WACf,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IA9BhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CAAEN,KAAMK,KAAKJ,mBAC3BI,KAAKP,WAAaS,OAAOC,aAAY,WACnC,EAAKF,SAAS,CAAEN,KAAM,EAAKC,mBAE3BQ,QAAQC,KAAK,EAAKX,MAAMC,QACvB,OAbP,gCAgBE,SAAmBW,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAnBpE,kCAuBE,WACMP,KAAKP,YACPiB,cAAcV,KAAKP,cAzBzB,oBAiCE,WACE,IAAQc,EAASP,KAAKQ,MAAdD,KACAZ,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAEhC,YAED,sBAAMI,UAAU,cAAhB,SAA+BhB,WA3CvC,GAA2BiB,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAQX,IAAMG,EAAb,4MACEzB,WAA4B,KAD9B,EAGEC,MAAkB,CAChByB,UAAU,EACVC,UAAW,WALf,EAoBEC,WAAa,WACX,EAAK5B,WAAaS,OAAOC,aAAY,WACnC,EAAKF,SAAS,CAAEmB,UAAWN,QAC1B,OAvBP,EA0BEQ,UAAY,WACN,EAAK7B,YACPiB,cAAc,EAAKjB,aA5BzB,EAgCE8B,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,KAlC9B,EAqCEO,UAAY,WACV,EAAKzB,SAAS,CAAEkB,UAAU,KAtC9B,uDAQE,WACEQ,SAASC,iBAAiB,cAAe5B,KAAKuB,WAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,WACxC1B,KAAKqB,eAXT,kCAcE,WACEM,SAASE,oBAAoB,cAAe7B,KAAKuB,WACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,WAC3C1B,KAAKsB,cAjBT,oBAyCE,WACE,MAAgCtB,KAAKN,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WA/ClC,GAAyBR,IAAMC,WCZ/BiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.b45923c4.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\ninterface ClockState {\n  time: string;\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  intervalId: number | null = null;\n\n  state: ClockState = {\n    time: '',\n  };\n\n  componentDidMount() {\n    this.setState({ time: this.getCurrentTime() });\n    this.intervalId = window.setInterval(() => {\n      this.setState({ time: this.getCurrentTime() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  getCurrentTime = () => {\n    return new Date().toUTCString().slice(-12, -4);\n  };\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">{time}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  intervalId: number | null = null;\n\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.startTimer();\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    this.stopTimer();\n  }\n\n  startTimer = () => {\n    this.intervalId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  };\n\n  stopTimer = () => {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}